 apiVersion: v1
 kind: ConfigMap
 metadata:
   name: poc-config-#{Environment}#
 data:
   ConnectionStrings__Marten: #{POSTGRES_CONNECTION_STRING}#
   ConnectionStrings__SqlDB: #{SQL_CONNECTION_STRING}#
   EventRaiserUrl: #{EVENT_RAISER_URL}#
---
apiVersion: batch/v1
kind: Job
metadata:
  name: poc-db-migration-#{Environment}#  
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 360
  #ttlSecondsAfterFinished: 60
  template:
    metadata:
      labels:
        app.kubernetes.io/name: db-migration-job
        app.kubernetes.io/instance: poc-db-#{Environment}#
    spec:      
      containers:
      - name: poc-db-migration-#{Environment}#
        image: ospriregistry.azurecr.io/martenpoc-db:$(Build.BuildNumber)
        envFrom:
        - configMapRef:
            name: poc-config-#{Environment}#
      restartPolicy: Never
---
apiVersion : apps/v1
kind: Deployment
metadata:
  name: martenpoc-api-#{Environment}#
  labels:
    app.kubernetes.io/name: martenpoc-api
    app.kubernetes.io/instance: martenpoc-api-#{Environment}#
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: martenpoc-api
      app.kubernetes.io/instance: martenpoc-api-#{Environment}#
  template:
    metadata:
      labels:
        app.kubernetes.io/name: martenpoc-api
        app.kubernetes.io/instance: martenpoc-api-#{Environment}#
        app: martenpoc-api-#{Environment}#
    spec:
      containers:
        - name: martenpoc-api-#{Environment}#
          image: ospriregistry.azurecr.io/martenpoc-api:$(Build.BuildNumber)
          ports:
          - containerPort: 80
          envFrom:
          - configMapRef:
              name: martenpoc-api-#{Environment}#
          resources:
            requests:
              memory: "#{Resources.Requests.Memory}#"
              cpu: "#{Resources.Requests.Cpu}#"
            limits:
              memory: "#{Resources.Limits.Memory}#"
              cpu: "#{Resources.Limits.Cpu}#"
          readinessProbe:
            httpGet:
              path: /ping
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /ping
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 30
---
apiVersion : apps/v1
kind: Deployment
metadata:
  name: martenpoc-raiser-#{Environment}#
  labels:
    app.kubernetes.io/name: martenpoc-raiser
    app.kubernetes.io/instance: martenpoc-raiser-#{Environment}#
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: martenpoc-raiser
      app.kubernetes.io/instance: martenpoc-raiser-#{Environment}#
  template:
    metadata:
      labels:
        app.kubernetes.io/name: martenpoc-raiser
        app.kubernetes.io/instance: martenpoc-raiser-#{Environment}#
        app: martenpoc-raiser-#{Environment}#
    spec:
      containers:
        - name: martenpoc-raiser-#{Environment}#
          image: ospriregistry.azurecr.io/martenpoc-raiser:$(Build.BuildNumber)
          ports:
          - containerPort: 80
          envFrom:
          - configMapRef:
              name: martenpoc-raiser-#{Environment}#
          resources:
            requests:
              memory: "#{Resources.Requests.Memory}#"
              cpu: "#{Resources.Requests.Cpu}#"
            limits:
              memory: "#{Resources.Limits.Memory}#"
              cpu: "#{Resources.Limits.Cpu}#"
          readinessProbe:
            httpGet:
              path: /ping
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /ping
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 30
---
apiVersion : apps/v1
kind: Deployment
metadata:
  name: martenpoc-handler-#{Environment}#
  labels:
    app.kubernetes.io/name: martenpoc-handler
    app.kubernetes.io/instance: martenpoc-handler-#{Environment}#
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: martenpoc-handler
      app.kubernetes.io/instance: martenpoc-handler-#{Environment}#
  template:
    metadata:
      labels:
        app.kubernetes.io/name: martenpoc-handler
        app.kubernetes.io/instance: martenpoc-handler-#{Environment}#
        app: martenpoc-handler-#{Environment}#
    spec:
      containers:
        - name: martenpoc-handler-#{Environment}#
          image: ospriregistry.azurecr.io/martenpoc-handler:$(Build.BuildNumber)
          envFrom:
          - configMapRef:
              name: martenpoc-handler-#{Environment}#
          resources:
            requests:
              memory: "#{Resources.Requests.Memory}#"
              cpu: "#{Resources.Requests.Cpu}#"
            limits:
              memory: "#{Resources.Limits.Memory}#"
              cpu: "#{Resources.Limits.Cpu}#"
---
apiVersion: v1
kind: Service
metadata:
    name: martenpoc-api-#{Environment}#
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
      service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "#{Subnet}#"
spec:
    type: LoadBalancer
    ports:
    - port: 80
      name: http
    selector:
        app: martenpoc-api-#{Environment}#